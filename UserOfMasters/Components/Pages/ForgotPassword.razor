@page "/forgotPassword"
@page "/forgotPassword/{Message}"
@page "/forgotPassword/{Message}/{UserName}"

@inject AuthService AuthService
@inject UserService UserService
@inject NavigationManager NavManager

<h3>ForgotPassword</h3>
<Messages Message="@Message"></Messages>

<div>
	<InputField Label="Username"
				@bind-Value="UserName"
				Placeholder="Enter username here">
	</InputField>
	<InputField Label="Reset token"
		Placeholder="click on Get ResetToken"
		@bind-Value="Token"
		IsDisabled = "true">
	</InputField>

	<div>
		<button @onclick="GetResetToken">Get ResetToken</button>
		<button @onclick="NavToResetPassword">Reset password</button>
	</div>
</div>

@code {
	[Parameter]
	public string UserName { get; set; } = string.Empty;

	[Parameter]
	public string Message { get; set; } = string.Empty;

	private string Token = string.Empty;

	public async Task GetResetToken()
	{
		var user = UserService.GetUserWithUserName(UserName);

		if (user == null)
		{
			Message = $"User: ({UserName}) not found in system.";
			return;
		}

		var token = await AuthService.GetResetToken(user);

		Token = token;

		Message = $"Your token: (  {token}  ) copy token and click on Reset password (Normaly it would be send per email!!!)";

		StateHasChanged();
	}

	public void NavToResetPassword()
	{
		NavManager.NavigateTo($"/resetPassword/{UserName}");
	}

}
